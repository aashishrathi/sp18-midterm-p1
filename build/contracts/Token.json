{
  "contractName": "Token",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport './interfaces/ERC20Interface.sol';\n\n/**\n * @title Token\n * @dev Contract that implements ERC20 token standard\n * Is deployed by `Crowdsale.sol`, keeps track of balances, etc.\n */\n\ncontract Token is ERC20Interface {\n\t// YOUR CODE HERE\n}\n",
  "sourcePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-midterm-p1/contracts/Token.sol",
  "ast": {
    "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-midterm-p1/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        338
      ]
    },
    "id": 339,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 334,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-midterm-p1/contracts/interfaces/ERC20Interface.sol",
        "file": "./interfaces/ERC20Interface.sol",
        "id": 335,
        "nodeType": "ImportDirective",
        "scope": 339,
        "sourceUnit": 405,
        "src": "25:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 336,
              "name": "ERC20Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 404,
              "src": "230:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Interface_$404",
                "typeString": "contract ERC20Interface"
              }
            },
            "id": 337,
            "nodeType": "InheritanceSpecifier",
            "src": "230:14:3"
          }
        ],
        "contractDependencies": [
          404
        ],
        "contractKind": "contract",
        "documentation": "@title Token\n@dev Contract that implements ERC20 token standard\nIs deployed by `Crowdsale.sol`, keeps track of balances, etc.",
        "fullyImplemented": false,
        "id": 338,
        "linearizedBaseContracts": [
          338,
          404
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 339,
        "src": "212:55:3"
      }
    ],
    "src": "0:268:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-midterm-p1/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        338
      ]
    },
    "id": 339,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 334,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-midterm-p1/contracts/interfaces/ERC20Interface.sol",
        "file": "./interfaces/ERC20Interface.sol",
        "id": 335,
        "nodeType": "ImportDirective",
        "scope": 339,
        "sourceUnit": 405,
        "src": "25:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 336,
              "name": "ERC20Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 404,
              "src": "230:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Interface_$404",
                "typeString": "contract ERC20Interface"
              }
            },
            "id": 337,
            "nodeType": "InheritanceSpecifier",
            "src": "230:14:3"
          }
        ],
        "contractDependencies": [
          404
        ],
        "contractKind": "contract",
        "documentation": "@title Token\n@dev Contract that implements ERC20 token standard\nIs deployed by `Crowdsale.sol`, keeps track of balances, etc.",
        "fullyImplemented": false,
        "id": 338,
        "linearizedBaseContracts": [
          338,
          404
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 339,
        "src": "212:55:3"
      }
    ],
    "src": "0:268:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-07-09T16:00:49.678Z",
  "devdoc": {
    "details": "Contract that implements ERC20 token standard Is deployed by `Crowdsale.sol`, keeps track of balances, etc.",
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_owner": "The address of the account owning tokens",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "Amount of remaining tokens allowed to spent"
      },
      "approve(address,uint256)": {
        "params": {
          "_spender": "The address of the account able to transfer the tokens",
          "_value": "The amount of tokens to be approved for transfer"
        },
        "return": "Whether the approval was successful or not"
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address from which the balance will be retrieved"
        },
        "return": "The balance"
      },
      "transfer(address,uint256)": {
        "params": {
          "_to": "The address of the recipient",
          "_value": "The amount of token to be transferred"
        },
        "return": "Whether the transfer was successful or not"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_from": "The address of the sender",
          "_to": "The address of the recipient",
          "_value": "The amount of token to be transferred"
        },
        "return": "Whether the transfer was successful or not"
      }
    },
    "title": "Token"
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_value` tokens"
      },
      "transfer(address,uint256)": {
        "notice": "send `_value` token to `_to` from `msg.sender`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "send `_value` token to `_to` from `_from` on the condition it is approved by `_from`"
      }
    }
  }
}